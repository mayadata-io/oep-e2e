## Cleaning SPC from the cluster
- name: Removing SPC from the cluster
  shell: kubectl delete spc --all
  args:
    executable: /bin/bash
      
## Cleaning PV form the cluster
- name: Removing PV from the cluster
  shell: kubectl delete pv -n {{ namespace }} --all
  args:
    executable: /bin/bash

## Cleaning up Blockdevices
- name: Removing Blockdevices
  shell: kubectl delete bd -n {{ namespace }} --all
  args:
    executable: /bin/bash
      
## Cleaning up deployment
- name: Removing deployment from openebs namespace
  shell: kubectl delete deploy -n {{ namespace }} --all
  args:
    executable: /bin/bash

## Cleaning up NDM Daemonset
- name: Removing NDM DaemonSet
  shell: kubectl delete ds -n {{ namespace }} --all
  args:
    executable: /bin/bash

## Cleaning up OpenEBS Namespace
- name: Removing openebs namespace
  shell: kubectl delete ns {{ namespace }}
  args:
    executable: /bin/bash
             
## Checking openebs ns is deleted or not
- name: Waiting for graceful termination of openebs namespace
  shell: kubectl get ns --no-headers | grep {{ namespace }} | awk '{print $1}' | wc -l
  args:
    executable: /bin/bash
  register: openebs_ns
  until: "openebs_ns.stdout=='0'"
  retries: 30
  delay: 2

- name: Waiting for graceful termination of openebs pods
  shell: kubectl get pods -n {{ namespace }} --no-headers | awk '{print $1}' | wc -l
  args:
    executable: /bin/bash
  register: pod_list
  until: "pod_list.stdout=='0'"
  retries: 30
  delay: 5

- name: Check openebses should not have openebs active entry
  uri:
    url: "{{ director_url }}/v3/groups/{{ group_id }}/openebses?state=active&clusterId={{ cluster_id }}"
    url_username: "{{ username.stdout }}"
    url_password: "{{ password.stdout }}"
    method: GET
    status_code: 200
  register: openebses_active
  until: "openebses_active.json.data == []"
  delay: 10
  retries: 30

